{
    "id": "interactive_character_creator",
    "name": "Interactive Character Creator",
    "description": "Create a character through interactive user input using Unity tools",
    "version": "1.0.0",
    "author": "Unity MCP System",
    "metadata": {
        "category": "Character Creation",
        "tags": [
            "character",
            "interactive",
            "creation",
            "user-input"
        ],
        "runtimeRequirements": [
            "Unity"
        ],
        "pluginDependencies": []
    },
    "parameters": [
        {
            "name": "sceneName",
            "type": "string",
            "description": "Target scene name for character creation",
            "required": false,
            "defaultValue": "Main"
        }
    ],
    "steps": [
        {
            "id": "ask_character_name",
            "type": "rpc_call",
            "connector": "unity",
            "operation": "Interact_ManageUserInput",
            "parameters": {
                "operation": "ask",
                "promptMessage": "请输入您想要创建的角色名称：",
                "windowId": "character_name_input",
                "mode": "clean"
            },
            "timeoutSeconds": 60
        },
        {
            "id": "ask_character_type",
            "type": "rpc_call",
            "connector": "unity",
            "operation": "Interact_ManageUserInput",
            "parameters": {
                "operation": "ask",
                "promptMessage": "请选择角色类型：\n1. 人形角色 (Humanoid)\n2. 动物角色 (Animal)\n3. 机器人角色 (Robot)\n4. 自定义角色 (Custom)\n\n请输入数字 1-4：",
                "windowId": "character_type_input",
                "mode": "clean"
            },
            "condition": "${ask_character_name.success}",
            "timeoutSeconds": 60
        },
        {
            "id": "create_character_base",
            "type": "rpc_call",
            "connector": "unity",
            "operation": "GameObject_Manage",
            "parameters": {
                "operation": "create",
                "name": "${ask_character_name.result}",
                "position": {
                    "x": 0,
                    "y": 0,
                    "z": 0
                },
                "rotation": {
                    "x": 0,
                    "y": 0,
                    "z": 0
                },
                "scale": {
                    "x": 1,
                    "y": 1,
                    "z": 1
                },
                "isLocalSpace": false,
                "primitiveType": 0
            },
            "condition": "${ask_character_type.success}",
            "retryPolicy": {
                "maxAttempts": 3,
                "delaySeconds": 1,
                "backoffStrategy": "linear"
            }
        },
        {
            "id": "ask_add_components",
            "type": "rpc_call",
            "connector": "unity",
            "operation": "Interact_ManageUserInput",
            "parameters": {
                "operation": "ask",
                "promptMessage": "是否需要为角色添加组件？\n可选组件:\n1. Rigidbody (刚体)\n2. Collider (碰撞器)\n3. Animator (动画器)\n4. CharacterController (角色控制器)\n5. AudioSource (音频源)\n\n请输入组件编号，用逗号分隔（例如：1,2,3）或输入'no'跳过：",
                "windowId": "components_input",
                "mode": "clean"
            },
            "condition": "${create_character_base.success}",
            "timeoutSeconds": 60
        },
        {
            "id": "process_components",
            "type": "model_use",
            "connector": "model_use",
            "operation": "text",
            "parameters": {
                "Messages": [
                    {
                        "Role": 0,
                        "Type": 0,
                        "Content": "用户输入: '${ask_add_components.result}'\n请将用户输入转换为Unity组件类型名称数组。规则如下：\n1->UnityEngine.Rigidbody\n2->UnityEngine.BoxCollider\n3->UnityEngine.Animator\n4->UnityEngine.CharacterController\n5->UnityEngine.AudioSource\n\n如果用户输入'no'或为空，返回空数组[]。\n如果用户输入数字，返回对应组件名称的JSON数组。\n只返回JSON数组，不要其他文字, 不要使用code block。"
                    }
                ],
                "parameters": {
                    "max_tokens": 200
                },
                "ModelType": "text",
                "Mode": "clean"
            },
            "condition": "${ask_add_components.success}",
            "timeoutSeconds": 30
        },
        {
            "id": "add_components_to_character",
            "type": "rpc_call",
            "connector": "unity",
            "operation": "GameObject_AddComponent",
            "parameters": {
                "gameObjectRef": {
                    "name": "${ask_character_name.result}"
                },
                "componentNames": "${process_components.result}"
            },
            "condition": "${process_components.success}",
            "retryPolicy": {
                "maxAttempts": 2,
                "delaySeconds": 1,
                "backoffStrategy": "linear"
            }
        },
        {
            "id": "ask_final_position",
            "type": "rpc_call",
            "connector": "unity",
            "operation": "Interact_ManageUserInput",
            "parameters": {
                "operation": "ask",
                "promptMessage": "请输入角色的最终位置坐标 (x,y,z)：\n格式：x,y,z （例如：0,0,0）\n或按回车使用默认位置 (0,0,0)：",
                "windowId": "position_input",
                "mode": "clean"
            },
            "condition": "${add_components_to_character.success}",
            "timeoutSeconds": 60
        },
        {
            "id": "parse_position",
            "type": "model_use",
            "connector": "model_use",
            "operation": "text",
            "parameters": {
                "Messages": [
                    {
                        "Role": 0,
                        "Type": 0,
                        "Content": "用户输入的位置: '${ask_final_position.result}'\n请将其转换为Unity Vector3格式的JSON对象。\n如果输入为空或无效，使用默认值 {\"x\":0,\"y\":0,\"z\":0}。\n如果输入格式为 'x,y,z'，解析为对应的坐标值。\n只返回JSON对象，不要其他文字。"
                    }
                ],
                "parameters": {
                    "max_tokens": 50
                },
                "ModelType": "text"
            },
            "condition": "${ask_final_position.success}",
            "timeoutSeconds": 30
        },
        {
            "id": "set_final_position",
            "type": "rpc_call",
            "connector": "unity",
            "operation": "GameObject_Manage",
            "parameters": {
                "operation": "modify",
                "gameObjectRef": {
                    "name": "${ask_character_name.result}"
                },
                "gameObjectDiffs": [
                    {
                        "typeName": "UnityEngine.Transform",
                        "value": null,
                        "props": [
                            {
                                "name": "position",
                                "typeName": "UnityEngine.Vector3",
                                "value": "${parse_position.result}"
                            }
                        ]
                    }
                ]
            },
            "condition": "${parse_position.success}"
        },
        {
            "id": "generate_creation_report",
            "type": "data_transform",
            "connector": "system",
            "operation": "json_stringify",
            "parameters": {
                "data": {
                    "characterName": "${ask_character_name.result}",
                    "characterType": "${ask_character_type.result}",
                    "primitiveType": "2",
                    "components": "${process_components.result}",
                    "finalPosition": "${parse_position.result}",
                    "creationSuccess": "${create_character_base.success}",
                    "componentsSuccess": "${add_components_to_character.success}",
                    "positionSuccess": "${set_final_position.success}",
                    "timestamp": "$(system.timestamp)"
                },
                "transform": "json_stringify"
            }
        }
    ],
    "outputs": {
        "characterName": {
            "source": "${ask_character_name.result}",
            "type": "string",
            "description": "用户输入的角色名称"
        },
        "characterType": {
            "source": "${ask_character_type.result}",
            "type": "string",
            "description": "用户选择的角色类型"
        },
        "creationResult": {
            "source": "${create_character_base.result}",
            "type": "string",
            "description": "角色创建操作结果"
        },
        "componentsResult": {
            "source": "${add_components_to_character.result}",
            "type": "string",
            "description": "组件添加操作结果"
        },
        "finalPosition": {
            "source": "${parse_position.result}",
            "type": "string",
            "description": "角色最终位置坐标"
        },
        "creationReport": {
            "source": "${generate_creation_report.result}",
            "type": "string",
            "description": "完整的角色创建报告"
        }
    }
}